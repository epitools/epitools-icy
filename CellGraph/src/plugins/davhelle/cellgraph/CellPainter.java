package plugins.davhelle.cellgraph;

import icy.main.Icy;
import icy.painter.Painter;
import icy.sequence.Sequence;
import icy.swimmingPool.SwimmingObject;
import plugins.adufour.ezplug.EzPlug;
import plugins.adufour.ezplug.EzVarSequence;
import plugins.davhelle.cellgraph.graphs.SpatioTemporalGraph;
import plugins.davhelle.cellgraph.painters.CentroidPainter;

public class CellPainter extends EzPlug {
	
	EzVarSequence				varSequence;

	@Override
	protected void initialize() {
		varSequence = new EzVarSequence("Input sequence");
		super.addEzComponent(varSequence);
	}

	@Override
	protected void execute() {
		Sequence sequence = varSequence.getValue();
		
		// watch if objects are already in the swimming pool:
		for ( SwimmingObject swimmingObject : Icy.getMainInterface().getSwimmingPool().getObjects() )
		{
			if ( swimmingObject.getObject() instanceof SpatioTemporalGraph )
			{
				SpatioTemporalGraph wing_disc_movie = (SpatioTemporalGraph) swimmingObject.getObject();
				
				
				System.out.println("CellVisualizer: loaded stGraph with "+wing_disc_movie.size()+" frames");
				System.out.println("CellVisualizer:	first frame has  "+wing_disc_movie.getFrame(0).size()+" cells");
				
				Painter centroids = new CentroidPainter(wing_disc_movie);
				sequence.addPainter(centroids);
				
				
			}
		}	
	}

	@Override
	public void clean() {
		// TODO Auto-generated by Icy4Eclipse
	}
}
